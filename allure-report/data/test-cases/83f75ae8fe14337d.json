{"uid":"83f75ae8fe14337d","name":"Test 04: Search Users From CSV","fullName":"test_cases.test_web.TestWeb#test_search_from_csv","time":{"start":1735220960071,"stop":1735220962197,"duration":2126},"description":"This Test Verifies Search Users From CSV And Checks Expected User Count","descriptionHtml":"<p>This Test Verifies Search Users From CSV And Checks Expected User Count</p>\n","status":"failed","statusMessage":"AssertionError: הטבלה לא התעדכנה בזמן!","statusTrace":"self = <test_cases.test_web.TestWeb object at 0x000002330B250230>, search_value = 'admin', expected_user = '1'\n\n    @allure.title(\"Test 04: Search Users From CSV\")\n    @allure.description(\"This Test Verifies Search Users From CSV And Checks Expected User Count\")\n    @pytest.mark.parametrize('search_value,expected_user', web_flows.testdata)\n    def test_search_from_csv(self, search_value, expected_user):\n        WebFlow.open_users_page()\n        WebFlow.search_user(search_value)\n>       WebFlow.wait_for_row_filter_change(expected_user)\n\ntest_cases\\test_web.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected_number = '1'\n\n    @staticmethod\n    @allure.step(\"Waiting for User List to Update\")\n    def wait_for_row_filter_change(expected_number):\n        max_iterations = 2  # מספר הפעמים שהלולאה תרוץ\n        iterations = 0\n        while iterations < max_iterations:\n            rows = page.web_users.get_users_list()  #כאן אנחנו מקבלים את השורות הנוכחיות\n            if len(rows) == int(expected_number):  # אם מספר השורות שווה למספר הצפוי\n                print(f\"הטבלה התעדכנה! הלולאה רצה {iterations + 1} פעמים.\")\n                break  # מפסיקים את הלולאה אם הכל תקין\n            time.sleep(0.5)\n            iterations += 1  # מגדילים את מספר הריצות\n        else:\n            print(f\"הטבלה לא התעדכנה. הלולאה רצה {max_iterations} פעמים.\")\n>           raise AssertionError(\"הטבלה לא התעדכנה בזמן!\")\nE           AssertionError: הטבלה לא התעדכנה בזמן!\n\nworkflows\\web_flows.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_web_driver","time":{"start":1735220916907,"stop":1735220943615,"duration":26708},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"_xunit_setup_method_fixture_TestWeb","time":{"start":1735220960070,"stop":1735220960070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"This Test Verifies Search Users From CSV And Checks Expected User Count","status":"failed","statusMessage":"AssertionError: הטבלה לא התעדכנה בזמן!","statusTrace":"self = <test_cases.test_web.TestWeb object at 0x000002330B250230>, search_value = 'admin', expected_user = '1'\n\n    @allure.title(\"Test 04: Search Users From CSV\")\n    @allure.description(\"This Test Verifies Search Users From CSV And Checks Expected User Count\")\n    @pytest.mark.parametrize('search_value,expected_user', web_flows.testdata)\n    def test_search_from_csv(self, search_value, expected_user):\n        WebFlow.open_users_page()\n        WebFlow.search_user(search_value)\n>       WebFlow.wait_for_row_filter_change(expected_user)\n\ntest_cases\\test_web.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected_number = '1'\n\n    @staticmethod\n    @allure.step(\"Waiting for User List to Update\")\n    def wait_for_row_filter_change(expected_number):\n        max_iterations = 2  # מספר הפעמים שהלולאה תרוץ\n        iterations = 0\n        while iterations < max_iterations:\n            rows = page.web_users.get_users_list()  #כאן אנחנו מקבלים את השורות הנוכחיות\n            if len(rows) == int(expected_number):  # אם מספר השורות שווה למספר הצפוי\n                print(f\"הטבלה התעדכנה! הלולאה רצה {iterations + 1} פעמים.\")\n                break  # מפסיקים את הלולאה אם הכל תקין\n            time.sleep(0.5)\n            iterations += 1  # מגדילים את מספר הריצות\n        else:\n            print(f\"הטבלה לא התעדכנה. הלולאה רצה {max_iterations} פעמים.\")\n>           raise AssertionError(\"הטבלה לא התעדכנה בזמן!\")\nE           AssertionError: הטבלה לא התעדכנה בזמן!\n\nworkflows\\web_flows.py:69: AssertionError","steps":[{"name":"Clicking on the left Menus and reaching the users page","time":{"start":1735220960072,"stop":1735220960724,"duration":652},"status":"passed","steps":[{"name":"Clicks on an Element","time":{"start":1735220960097,"stop":1735220960284,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330D11E960>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Clicks on an Element","time":{"start":1735220960309,"stop":1735220960484,"duration":175},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330D11D5B0>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Clicks on an Element","time":{"start":1735220960509,"stop":1735220960724,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330D11DE50>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":3,"attachmentStep":false},{"name":"Clears Search Box and Searches for a Specific User","time":{"start":1735220960725,"stop":1735220961105,"duration":380},"status":"passed","steps":[{"name":"Clearing the Element's Content","time":{"start":1735220960820,"stop":1735220960927,"duration":107},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330B2149E0>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Sends Text to an Element","time":{"start":1735220960957,"stop":1735220961104,"duration":147},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330D11F1D0>"},{"name":"value","value":"'admin'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"search_value","value":"'admin'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":2,"attachmentStep":false},{"name":"Waiting for User List to Update","time":{"start":1735220961105,"stop":1735220962160,"duration":1055},"status":"failed","statusMessage":"AssertionError: הטבלה לא התעדכנה בזמן!\n","statusTrace":"  File \"C:\\Users\\moshiach\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\moshiach\\Automation\\test_automation_final_project\\workflows\\web_flows.py\", line 69, in wait_for_row_filter_change\n    raise AssertionError(\"הטבלה לא התעדכנה בזמן!\")\n","steps":[],"attachments":[],"parameters":[{"name":"expected_number","value":"'1'"}],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"type":"image/png","size":0}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":8,"attachmentStep":false},"afterStages":[{"name":"_xunit_setup_method_fixture_TestWeb::0","time":{"start":1735220963314,"stop":1735220964746,"duration":1432},"status":"passed","steps":[{"name":"Returns to Home Page and Closes Open Left Menus if Necessary","time":{"start":1735220963314,"stop":1735220964745,"duration":1431},"status":"passed","steps":[{"name":"Clicks on an Element","time":{"start":1735220964390,"stop":1735220964571,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330B253590>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Clicks on an Element","time":{"start":1735220964610,"stop":1735220964745,"duration":135},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000002330B252F60>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":2,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":3,"attachmentStep":false},{"name":"init_web_driver::0","time":{"start":1735220964748,"stop":1735220967146,"duration":2398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_user","value":"'1'"},{"name":"search_value","value":"'admin'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"83f75ae8fe14337d.json","parameterValues":["'1'","'admin'"]}